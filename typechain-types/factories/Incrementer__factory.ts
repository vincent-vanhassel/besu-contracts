/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Incrementer, IncrementerInterface } from "../Incrementer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060008081905550610183806100276000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306661abd14610046578063a87d942c14610064578063d09de08a14610082575b600080fd5b61004e61008c565b60405161005b91906100cf565b60405180910390f35b61006c610092565b60405161007991906100cf565b60405180910390f35b61008a61009b565b005b60005481565b60008054905090565b60016000808282546100ad9190610119565b92505081905550565b6000819050919050565b6100c9816100b6565b82525050565b60006020820190506100e460008301846100c0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610124826100b6565b915061012f836100b6565b9250828201905080821115610147576101466100ea565b5b9291505056fea2646970667358221220a3973d298510af820e570df207db88fd25540bf5c2a526f79084fc4481e3358664736f6c63430008130033";

type IncrementerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncrementerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Incrementer__factory extends ContractFactory {
  constructor(...args: IncrementerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Incrementer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Incrementer__factory {
    return super.connect(runner) as Incrementer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncrementerInterface {
    return new Interface(_abi) as IncrementerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Incrementer {
    return new Contract(address, _abi, runner) as unknown as Incrementer;
  }
}
